[tool.poetry]
name = "chunin"
version = "0.0.1"
description = "Checks Union"
license = "MIT"
authors = ["Oleh Mazur <real.trolforever@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/Four-Velocity/chunin"
repository = "https://github.com/Four-Velocity/chunin"
documentation = "https://chunin.four-velocity.codes"
keywords = ["linter", "formatter", "quality"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development",
    "Topic :: Software Development :: Bug Tracking",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.6.2"
toml = "^0.10"
PyYAML = "^5.4"
Jinja2 = "^2.9"
pybadges = "^2.2"

[tool.poetry.dev-dependencies]
pytest = "^6.2"
pytest-cov = "^2.12"
pytest-benchmark = "^3.4"

flake8 = "^3.9"
flake8-docstrings = "^1.6"
flake8-builtins = "^1.5"

bandit = "^1.7"

mypy = "^0"

black = "^21.5b1"
isort = "^5.8"

mkdocs = "^1.1.2"
mkdocs-material = "^7.1.4"
mkdocstrings = "^0.15.1"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 99

[tool.black]
line_length = 99
target_version = ["py36"]
exclude = '''

(
  /(
      \.eggs
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.idea
  )/
)
'''

[tool.pytest.ini_options]
addopts = "--cov=chunin --cov-config=pyproject.toml --doctest-modules --doctest-continue-on-failure"
python_files = ["tests.py", "test_*.py", "*_tests.py"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

omit = ["tests/*"]
sort = "Cover"
